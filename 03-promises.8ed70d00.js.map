{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,EAAUS,MAAAR,IAEpBM,EAAO,C,SAAEP,EAAUS,MAAAR,MAEpBA,MAIP,MAAMS,EAASC,SAASC,cAAc,SAChCC,EAAQF,SAASC,cAAc,uBAC/BE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBACtCF,EAAOM,iBAAiB,UAExB,SAAuBC,GACrBA,EAAMC,iBACN,IAAIC,EAAaC,OAAOP,EAAMQ,OAC1BC,EAAcP,EAAOM,MACzB,IAAK,IAAIE,EAAI,EAAGA,GAAKD,EAAaC,IAAK,CAErCxB,EADewB,EACOJ,GACnBK,MAAK,EAACxB,SAAEA,EAAUS,MAAAgB,MACjBC,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqB5B,QAAiByB,UAE/DI,OAAM,EAAC7B,SAAEA,EAAUS,MAAAqB,MAClBJ,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAoB/B,QAAe8B,UAE7DX,GAAcC,OAAON,EAAKO,OAE9BJ,EAAMe,OAAOC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst formEl = document.querySelector('.form');\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nformEl.addEventListener('submit', onSubmitStart)\n\nfunction onSubmitStart(event){\n  event.preventDefault();\n  let delayInput = Number(delay.value);\n  let amountInput = amount.value;\n  for (let i = 1; i <= amountInput; i++) {\n    const target = i;\n    createPromise(target, delayInput)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n      delayInput += Number(step.value);\n  }\n  event.target.reset()\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","addEventListener","event","preventDefault","delayInput","Number","value","amountInput","i","then","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure","target","reset"],"version":3,"file":"03-promises.8ed70d00.js.map"}